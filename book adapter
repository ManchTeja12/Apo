package com.saveetha.interest.adapter

import android.view.LayoutInflater
import android.view.View
import android.view.ViewGroup
import android.widget.TextView
import androidx.recyclerview.widget.RecyclerView
import com.saveetha.interest.R
import com.saveetha.interest.models.BookEntry

class BookAdapter(
    private var entries: List<BookEntry>,
    private val onEdit: (BookEntry) -> Unit,
    private val onDelete: (BookEntry) -> Unit,
    private val onShare: (BookEntry) -> Unit
) : RecyclerView.Adapter<BookAdapter.BookViewHolder>() {

    inner class BookViewHolder(itemView: View) : RecyclerView.ViewHolder(itemView) {
        val tvBorrowerName: TextView = itemView.findViewById(R.id.tvBorrowerName)
        val tvAmount: TextView = itemView.findViewById(R.id.tvAmount)
        val tvDates: TextView = itemView.findViewById(R.id.tvDate)
        val tvInterestInfo: TextView = itemView.findViewById(R.id.tvInterestInfo)
        val tvCalculationType: TextView = itemView.findViewById(R.id.tvCalculationType) // NEW

        val btnEdit: View = itemView.findViewById(R.id.btnEdit)
        val btnDelete: View = itemView.findViewById(R.id.btnDelete)
        val btnShare: View = itemView.findViewById(R.id.btnShare)
    }

    override fun onCreateViewHolder(parent: ViewGroup, viewType: Int): BookViewHolder {
        val view = LayoutInflater.from(parent.context)
            .inflate(R.layout.item_book_entry, parent, false)
        return BookViewHolder(view)
    }

    override fun onBindViewHolder(holder: BookViewHolder, position: Int) {
        val entry = entries[position]
        holder.tvBorrowerName.text = entry.borrowerName
        holder.tvAmount.text = "Amount: ₹${entry.amount}"
        holder.tvDates.text = "From: ${entry.Date} To: ${entry.receivedDate}"
        holder.tvInterestInfo.text =
            "Interest Rate: ${entry.interestRate}\nTime Period: ${entry.totalTime}\nInterest: ₹${entry.interestAmount}\nTotal Amount: ₹${entry.totalAmount}"
        holder.tvCalculationType.text = "Type: ${entry.calculationType}" // NEW

        holder.btnEdit.setOnClickListener { onEdit(entry) }
        holder.btnDelete.setOnClickListener { onDelete(entry) }
        holder.btnShare.setOnClickListener { onShare(entry) }
    }

    override fun getItemCount(): Int = entries.size

    fun updateList(newList: List<BookEntry>) {
        entries = newList
        notifyDataSetChanged()
    }
}
